{"heading":"DSNJ004I ACTIVE LOG COPY n INACTIVE, LOG IN SINGLE MODE, ENDRBA=...","followUp":null,"content":"Explanation\n\nThis message is sent when the dual active logging option is selected and copy\n'n' becomes inactive. A log copy becomes inactive when the next active log\ndata set is not ready when required. ENDRBA is the last byte of log data\nwritten on copy 'n'. This is usually caused by a delay in off-load.\n\nSystem action\n\nThe log is switched to single mode until the next data set for copy 'n' is\nready for logging.\n\nIf Db2 is shut down or abends while in single mode with the ZPARM option still\nset for dual active data sets, the previous state of the active log data sets\ndetermines what happens when Db2 is started, as follows:\n\no  If fewer than two data sets are available (not flagged as STOPPED or\n   REMOVAL PENDING) for each set of active logs, Db2 startup terminates and\n   message DSNJ112E is issued.\n\no  If an active log data set is in NOTREUSABLE state, Db2 can be started in\n   single logging mode, but dual mode takes effect when the other active log\n   data set becomes available after offloading.\n\nThis message is non-scrollable. It remains highlighted on the console until\nyou take the appropriate action.\n\nOperator response\n\nExecute an MVS(TM) Display System Requests command (D R,L for example) to\nensure that there are no outstanding requests that are related to the log off-\nload process. Take the necessary action to satisfy any requests, and permit\noff-load to continue.\n\nSystem programmer response\n\nIf the switch to single mode was caused by the lack of a resource required for\noff-load, the necessary resource should be made available to allow off-load to\ncomplete and thus permit dual logging to proceed. If recovery is required,\ninformation from this message might be required as input to the change log\ninventory (DSNJU003) utility.\n ","additional":[{"heading":"DSNJ112E csect-name INSUFFICIENT ACTIVE LOG DATA SETS DEFINED IN BSDS","copyright":"Text Below Copyright (c) 2023, IBM","followUp":"V=IBM P=DB2 MESSAGES R=V13 I=DSNJ112E","content":"Explanation\n\nThere are not enough active log data sets defined in the BSDS to start Db2.\nThis condition usually exists for one of the following reasons.\n\no  Fewer than two data sets are defined for one of the active log copy sets.\n\no  DSN6LOGP specified TWOACTV=YES in Db2 initialization parameters, but data\n   sets for two copies of active log are not defined in BSDS.\n\no  Fewer than two data sets are available (not flagged as STOPPED or REMOVAL\n   PENDING) for one of the active log copy sets.\n\nSystem action\n\nDb2 startup is terminated.\n\nOperator response\n\nNotify the system programmer.\n\nSystem programmer response\n\nUse the change log inventory (DSNJU003) utility to make the number of active\nlog data sets defined in the BSDS consistent with the parameters specified on\nDSN6LOGP. Log data sets that are flagged as 'STOPPED' will not be reused by\nDb2. These data sets must be recovered (either redefined or recovered from the\nother copy of the log) and the log data sets must be deleted and re-added to\nthe BSDS (using DSNJU003) with the appropriate RBA's, to clear the STOPPED\nstatus. Restart Db2.\n ","additional":[]},{"heading":"Chapter 40. DSNJU003 (change log inventory)","copyright":"Text Below Copyright (c) 2023, IBM","followUp":"V=IBM P=DB2 UTILITY GUIDE R=V13 I=DSNJU003","content":"The DSNJU003 stand-alone utility changes the bootstrap data sets (BSDSs).\n\nYou can use the utility to:\n\no  Add or delete active or archive log data sets\n\no  Add or delete checkpoint records\n\no  Create a conditional restart control record to control the next start of the\n   DB2 subsystem\n\no  Change the VSAM catalog name entry in the BSDS\n\no  Modify the communication record in the BSDS\n\no  Modify the value for the highest-written log RBA value (relative byte\n   address within the log) or the highest-offloaded RBA value\n\no  Deactivate a member of a data sharing group\n\no  Destroy a member from a data sharing group\n\no  Reactivate a deactivated member of a data sharing group\n\nEnvironment\n\nExecute the change log inventory utility only as a batch job when DB2 is not\nrunning. Changing a BSDS for a data-sharing member by using DSNJU003 might\ncause a log read request from another data-sharing member to fail. The failure\noccurs only if the second member tries to access the changed BSDS before the\nfirst member is started.\n\nAuthorization required\n\nThe authorization ID of the DSNJU003 job must have the requisite RACF\nauthorization.\n\nRequired and optional data sets\n\nDSNJU003 recognizes DD statements with the following DD names:\n\nSYSUT1\n\n     Specifies and allocates the bootstrap data set. This statement is\n     required.\n\nSYSUT2\n\n     Specifies and allocates a second copy of the bootstrap data set. This\n     statement is required if you use dual BSDSs.\n\n     Dual BSDSs and DSNJU003: With each execution of DSNJU003, the BSDS\n     timestamp field is updated with the current system time. If you run\n     DSNJU003 separately for each copy of a dual copy BSDS, the timestamp\n     fields are not synchronized, and DB2 fails at startup. If you change the\n     contents of the BSDS copy by running DSNJU003, DB2 issues error message\n     DSNJ122I. Therefore, if you use DSNJU003 to update dual copy BSDSs, update\n     both BSDSs within a single execution of DSNJU003.\n\nSYSPRINT\n\n     Specifies a data set for print output. This statement is required. The\n     logical record length (LRECL) is 125.\n\nSYSIN\n\n    Specifies the input data set for statements. This statement is required.\n    The logical record length (LRECL) is 80.\n\nRunning DSNJU003\n\nExecute the utility with the following statement, which can be included only in\na batch job:\n\n//EXEC    PGM=DSNJU003\n\nSyntax and options of the DSNJU003 control statement\n\nThe DSNJU003 utility control statement, with its multiple options, defines the\nfunction that the utility job performs.\n\nDSNJU003 uses multiple statements that you submit in separate jobs. The\nstatements are:\no  NEWLOG\no  DELETE\no  CRESTART\no  NEWCAT\no  DDF\no  CHECKPT\no  HIGHRBA\no  DELMBR\no  RSTMBR\n\nDSNJU003 (change log inventory) syntax diagram\n\nNEWLOG statement\n\nnew active log:\n\nnew archive log:\n\nDELETE statement\n\nCRESTART statement\n\ncreate-spec:\n\nNEWCAT statement\n\nDDF statement\n\nip-spec:\n\nlu-spec:\n\nno-spec:\n\nCHECKPT statement\n\nHIGHRBA statement\n\nDELMBR statement\n\nRSTMBR statement\n\nOption descriptions\n\nNEWLOG\n\n    Declares one of the following data sets:\n\n    o  A VSAM data set that is available for use as an active log data set.\n\n       Use only the keywords DSNAME=, COPY1, and COPY2.\n\n    o  An active log data set that is replacing one that encountered an I/O\n    error.\n\n       Use only the keywords DSNAME=, COPY1, COPY2, STARTRBA=, and\n       ENDRBA=.\n\n    o  An archive log data set volume.\n\n       Use only the keywords DSNAME=,COPY1VOL=, COPY2VOL=,\n       STARTRBA=, ENDRBA=, UNIT=, CATALOG=, STRTLRSN=, and\n       ENDLRSN=.\n\n       If you create an archive log data set and add it to the BSDS with this\n       utility, you can specify a name that DB2 might also generate. DB2\n       generates archive log data set names of the form\n       DSNCAT.ARCHLOGx.Annnnnnn where:\n\n       -   DSNCAT and ARCHLOG are parts of the data set prefix that you\n           specified on installation panels DSNTIPA2 and DSNTIPH.\n\n       -   x is 1 for the first copy of the logs, and 2 is for the second copy.\n\n       -   Annnnnnn represents the series of low-level qualifiers that DB2\n           generates for archive log data set names, beginning with A0000001,\n           and incrementing to A0000002, A0000003, and so forth.\n\n       For data sharing, the naming convention is DSNCAT.ARCHLOG1 or\n       DSNCAT.DSN1.ARCLG1.\n\n       If you do specify a name by using the same naming convention as DB2, you\n       receive a dynamic allocation error when DB2 generates that name. The\n       error message, DSNJ103I, is issued once. DB2 then increments the\n       low-level qualifier to generate the next data set name in the series and\n       offloads to it the next time DB2 archives. (The active log that\n       previously was not offloaded is offloaded to this data set.)\n\n       The newly defined active logs cannot specify a start and end LRSN. When\n       DB2 starts, it reads the new active log data sets with an RBA range to\n       determine the LRSN range, and updates the start and end LRSN in the\n       BSDS for the new log data sets. The start and end LRSN for new active\n       logs that contain active log data are read at DB2 start-up time from the\n       new active log data sets that are specified in the change log inventory\n       NEWLOG statements. For new archive logs that are defined with change log\n       inventory, the user must specify the start and end RBAs. For data\n       sharing, the user must also specify the start and end LRSNs. DB2 startup\n       does not attempt to find these values from the new archive log data\n       sets.\n\nDSNAME= data-set-name\n     Specifies a log data set.\n\n     data-set-name can be up to 44 characters long.\n\nCOPY1\n\n     Makes the data set an active log copy-1 data set.\n\nCOPY2\n\n     Makes the data set an active log copy-2 data set.\n\nSTARTRBA= startrba\n\n     Identifies a hexadecimal number of up to 20 characters. If you use fewer\n     than 20 characters, leading zeros are added. startrba must end with '000';\n     otherwise DB2 returns a DSNJ4381 error message. You can obtain the RBA\n     from messages or by printing the log map.\n\n     On the NEWLOG statement, startrba gives the log RBA of the beginning of\n     the replacement active log data set or the archive log data set volume\n     that is specified by DSNAME.\n\n     On the CRESTART statement, startrba is the earliest RBA of the log that is\n     to be used during restart. If you omit STARTRBA, DB2 determines the\n     beginning of the log range.\n\n     On the CHECKPT statement, startrba indicates the start checkpoint log\n     record.\n\n     STARTRBA is required when STARTIME is specified.\n\n     On the HIGHRBA statement, startrba denotes the log RBA of the\n     highest-written log record in the active log data sets.\n\nENDRBA= endrba\n\n     endrba is a hexadecimal number of up to 20 characters. If you use fewer\n     than 20 characters, leading zeros are added. endrba must end with '000' or\n     DB2 returns a DSNJ4381 error message.\n\n     On the NEWLOG statement, endrba gives the log RBA (relative byte address\n     within the log) of the end of the replacement active log data set or the\n     archive log data set volume that is specified by DSNAME.\n\n     On the CRESTART statement, endrba is the last RBA of the log that is to be\n     used during restart, and it is also the starting RBA of the next active\n     log that is written after restart. Any log information in the bootstrap\n     data set, the active logs, and the archive logs with an RBA that is\n     greater than endrba is discarded. If you omit ENDRBA, DB2 determines the\n     end of the log range.\n\n     The value of ENDRBA must be a multiple of 4096. (The hexadecimal value\n     must end in 000.) Also, the value must be greater than or equal to the\n     value of STARTRBA. If STARTRBA and ENDRBA are equal, the next restart is a\n     cold start; that is, no log records are processed during restart. The\n     specified RBA becomes the beginning RBA of the new log.\n\n     On the CHECKPT statement, endrba indicates the end checkpoint log record\n     that corresponds to the start checkpoint log record.\n\nCOPY1VOL= vol-id\n     vol-id is the volume serial of the copy-1 archive log data set that is\n     specified after DSNAME.\n\nCOPY2VOL=vol-id\n     vol-id is the volume serial of the copy-2 archive log data set that is\n     specified after DSNAME.\n\nUNIT=unit-id\n    unit-id is the device type of the archive log data set that is named after\n    DSNAME.\n\nCATALOG\n\n    Indicates whether the archive log data set is to be cataloged.\n\n    NO   Indicates that the archive log data set is not to be cataloged. All\n         subsequent allocations of the data set are made using the unit and\n         volume information that is specified on the statement.\n\n    YES\n\n         Indicates that the archive log data set is to be cataloged. All\n         subsequent allocations of the data set are made using the catalog.\n\n         DB2 requires that all archive log data sets on disk be cataloged.\n         Select CATALOG=YES if the archive log data set is on disk.\n\nSTRTLRSN= startlrsn\n    On the NEWLOG statement, startlrsn identifies the LRSN in the log record\n    header of the first complete log record on the new archive data set.\n    startlrsn is a hexadecimal number of up to 20 characters. If you use fewer\n    than 20 characters, leading zeros are added. In a data sharing environment,\n    run the print log map utility to find an archive log data set and start and\n    end RBAs and LRSNs.\n\nENDLRSN=endlrsn\n\n    endlrsn is a hexadecimal number of up to 20 characters. If you use fewer\n    than 20 characters, leading zeros are added. In a data sharing environment,\n    run the print log map utility to find an archive log data set and start and\n    end RBAs and LRSNs.\n\n    For the NEWLOG and CHECKPT statements, the ENDLRSN option is valid\n    only in a data sharing environment. For the CRESTART statement, the\n    ENDLRSN option is valid in both data sharing and non-data sharing\n    environments. This option cannot be specified with STARTRBA or ENDRBA.\n\n    On the NEWLOG statement, endlrsn is the LRSN in the log record header of\n    the last log record on the new archive data set.\n\n    On the CRESTART statement, in a data sharing environment, endlrsn is an\n    LRSN value that is to be used as the log truncation point. A valid log\n    truncation point is any LRSN value for which there exists a log record with\n    an LRSN that is greater than or equal to the specified LRSN value. Any log\n    information in the bootstrap data set, the active logs, and the archive\n    logs with an LRSN greater than endlrsn is discarded. If you omit ENDLRSN,\n    DB2 determines the end of the log range.\n\n    In a non-data sharing environment, endlrsn is the RBA value that matches\n    the start of the last log record that is to be used during restart. Any log\n    information in the bootstrap data set, the active logs, and the archive\n    logs with an RBA that is greater than endlrsn is discarded. If the endlrsn\n    RBA value does not match the start of a log record, DB2 restart fails. If\n    you omit ENDLRSN, DB2 determines the end of the log range.\n\n    On the CHECKPT statement, endlrsn is the LRSN of the end checkpoint log\n    record.\n\nSTARTIME=startime\n    Enables you to record the start time of the RBA in the BSDS. This field is\n    optional.\n\n     startime specifies the start time in the following timestamp format:\n\n     yyyydddhhmmsst\n\n     In this format:\n     yyyy     Indicates the year (1989-2099).\n     ddd      Indicates the day of the year (0-365; 366 in leap years).\n     hh       Indicates the hour (0-23).\n     mm       Indicates the minutes (0-59).\n     ss       Indicates the seconds (0-59).\n     t        Indicates tenths of a second.\n\n     If fewer than 14 digits are specified for the STARTIME or ENDTIME\n     parameter, trailing zeros are added.\n\n     If STARTIME is specified, the ENDTIME, STARTRBA, and ENDRBA options\n     must also be specified.\n\nENDTIME= endtime\n     Enables you to record the end time of the RBA in the BSDS. This field is\n     optional.\n\n     endtime specifies the end time in the same timestamp format as the\n     STARTIME option. The ENDTIME value must be greater than or equal to the\n     value of STARTIME.\n\nDELETE\n\n     Deletes either CCSID information or log data set information from the\n     bootstrap data sets. To delete CCSID information, specify the CCSIDS\n     option. To delete all information for a specified log data set or volume,\n     specify the DSNAME option.\n\nCCSIDS\n\n     Deletes CCSID information from the BSDS. CCSID information is stored in\n     the BSDS to ensure that you do not accidentally change the CCSID values.\n\n     Use this option under the direction of IBM Software Support when the CCSID\n     information in the BSDS is incorrect. After you run a DSNJU003 job with\n     the DELETE CCSIDS option, the CCSID values from the application defaults\n     load module are recorded in the BSDS the next time DB2 is started.\n\nCRESTART\n\n     Controls the next restart of DB2, either by creating a new conditional\n     restart control record or by canceling the one that is currently active.\n\nCREATE\n\n     Creates a new conditional restart control record. When the new record is\n     created, the previous control record becomes inactive.\n\nSYSPITR=log-truncation-point\n     Specifies the log RBA (non-data sharing system) or the log LRSN (data\n     sharing system) that represents the log truncation point for the\n     point-in-time for system recovery. Before you run the RESTORE SYSTEM\n     utility to recover system data, you must use the SYSPITR option of\n     DSNJU003. This option enables you to create a conditional restart control\n     record to truncate the logs for system point-in-time recovery. You can\n     also specify a value of FFFFFFFFFFFFFFFFFFFF to cause a point-in-time\n     recovery to occur without log truncation.\n\n     log-truncation-point specifies the log RBA, log LRSN, or log\n     FFFFFFFFFFFFFFFFFFFF. In a non-data sharing environment, log-truncation\n     point is the RBA value that matches the start of the last log record that\n     is to be used during restart. If the RBA value does not match the start of\n     a log record,\n\n    DB2 restart fails. In a data sharing environment, log-truncation point is\n    an LRSN value that is a valid log truncation point. A valid log truncation\n    point is any LRSN value for which there exists a log record with an LRSN\n    that is greater than or equal to the specified LRSN value. Use the same\n    LRSN value for all members of the data sharing group that require log\n    truncation.\n\n    You cannot specify any other option with CREATE, SYSPITR.\n\nENDTIME= log-truncation-timestamp\n    Specifies an end time value that is to be used as the log truncation point.\n    A valid truncation point is any system time-of-day clock timestamp for\n    which there exists a log record with a timestamp that is greater than or\n    equal to the specified timestamp value. Any log information in the\n    bootstrap data set, the active logs, and the archive logs with a timestamp\n    greater than the ENDTIME is discarded. If you do not specify ENDTIME, DB2\n    determines the end of the log range.\n\n    You cannot specify any other option with CREATE, ENDTIME.\n\nSYSPITRT= log-truncation-timestamp\n    Specifies the timestamp value that represents the point-in-time log\n    truncation point for system recovery. Before you run the RESTORE SYSTEM\n    utility to recover system data, you must use the SYSPITR or SYSPITRT option\n    of DSNJU003. The options enable you to create a conditional restart control\n    record to truncate the logs for system point-in-time recovery.\n\n    Log-truncation-timestamp specifies a timestamp value that is to be used as\n    the log truncation point. A valid log truncation point is any system\n    time-of-day clock UTC timestamp for which there exists a log record with a\n    timestamp that is greater than or equal to the specified timestamp value.\n    Any log information in the bootstrap data set, the active logs, and the\n    archive logs with a timestamp greater than SYSPITRT is discarded. If you\n    omit SYSPITRT, DB2 determined the end of the log range. Use the same\n    timestamp value for all members of the data sharing group that require log\n    truncation.\n\n    You cannot specify any other option with CREATE, SYSPITRT.\n\n    Note:  The startime keyword specifies the start time in the yyyydddhhmmsst\n    timestamp format. See the STARTIME option for details about the timestamp.\n\nCANCEL\n    On the CRESTART statement, deactivates the currently active conditional\n    restart control record. The record remains in the BSDS as historical\n    information.\n\n    No other keyword can be used with CANCEL on the CRESTART statement.\n\n    On the CHECKPT statement, deletes the checkpoint queue entry that contains\n    a starting RBA that matches the parameter that is specified by the STARTRBA\n    keyword.\n\n    Attention:     This statement can override DB2's efforts to maintain data\n    in a consistent state. Do not use this statement without understanding the\n    conditional restart process.\n\nCHKPTRBA= chkptrba\n    Identifies the log RBA of the start of the checkpoint record that is to be\n    used during restart.\n\n    If you use STARTRBA or ENDRBA, and you do not use CHKPTRBA, the\n    DSNJU003 utility selects the RBA of an appropriate checkpoint record. If\n    you do use CHKPTRBA, you override the value that is selected by the\n    utility.\n\n     chkptrba must be in the range that is determined by startrba and endrba or\n     their default values.\n\n     If possible, do not use CHKPTRBA; let the utility determine the RBA of the\n     checkpoint record.\n\n     CHKPTRBA=0 overrides any selection by the utility; at restart, DB2\n     attempts to use the most recent checkpoint record.\n\nFORWARD=\n\n     Indicates whether to use the forward-log-recovery phase of DB2 restart, which\n     reads the log in a forward direction to recover any units of recovery that were\n     in one of the following two states when DB2 was last stopped:\n     o  Indoubt (the units of recovery had finished the first phase of commit, but\n       had not started the second phase)\n     o  In-commit (had started but had not finished the second phase of commit)\n\n     YES\n\n         Allows forward-log recovery.\n\n         If you specify a cold start (by using the same value for STARTRBA and\n         ENDRBA), no recovery processing is performed.\n\n     NO  Terminates forward-log recovery before log records are processed. When\n         you specify, FORWARD=NO, DB2 does not go back in the log to the\n         beginning of any indoubt or in-commit units of recovery to complete\n         forward recovery for these units. Choose this option if a very old\n         indoubt unit of recovery exists to avoid a lengthy restart. The\n         in-commit and indoubt units of recovery are marked as bypassed and\n         complete in the log. However, any database writes that are pending at\n         the end of the log, including updates from other units of recovery,\n         are still written out during the forward phase of restart. Any updates\n         that must be rolled-back, such as for an inflight or in-abort unit of\n         recovery, are done during the backout phase of restart.\n\nBACKOUT=\n\n     Indicates whether to use the backward-log-recovery phase of DB2 restart,\n     which rolls back any units of recovery that were in one of the following two\n     states when DB2 was last stopped:\n     o  Inflight (did not complete the first phase of commit)\n     o  In-abort (had started but not finished an abort)\n\n     YES\n\n         Allows backward-log recovery.\n\n         If you specify a cold start (by using the same value for STARTRBA and\n         ENDRBA), no recovery processing is performed.\n\n     NO  Terminates backward-log recovery before log records are processed.\n\nCSRONLY\n\n     Performs only the first and second phases of restart processing (log\n     initialization and current-status rebuild). After these phases, the system\n     status is displayed, and restart terminates. Some parts of the log\n     initialization are not performed, including any updating of the log and\n     display of STARTRBA and ENDRBA information.\n\n     When DB2 is restarted with this option in effect, the conditional restart\n     control record is not deactivated. To prevent the control record from\n     remaining active, use the DSNJU003 utility again with CRESTART CANCEL, or\n     with CRESTART CREATE to create a new active control record.\n\nNEWCAT\n\n    Changes the VSAM catalog name in the BSDS.\n\nVSAMCAT= catalog-name\n    Changes the VSAM catalog name entry in the BSDS.\n\n    catalog-name can be up to eight characters long. The first character must\n    be alphabetic, and the remaining characters can be alphanumeric.\n\nDDF\n\n    Updates the LOCATION, LUNAME, and other DDF related information values\n    in the BSDS. If you use this statement to insert new values into the BSDS,\n    you must include at least the LOCATION in the DDF statement. To update an\n    existing set of values, you need to include only those values that you want\n    to change. The DDF record cannot be deleted from the BSDS after it has been\n    added; it can only be modified.\n\nLOCATION= location-name\n    Changes the LOCATION value in the BSDS.\n\n    location-name specifies the name of your local DB2 site.\n\nPORT\n\n    Identifies the TCP/IP port number that is used by DDF to accept incoming\n    connection requests. This value must be a decimal number between 0 and\n    65535, including 65535; zero indicates that DDF's TCP/IP support is to be\n    deactivated.\n\n    If DB2 is part of a data sharing group, all the members of the DB2 data\n    sharing group must have the same value for PORT.\n\nRESPORT\n\n    Identifies the TCP/IP port number that is used by DDF to accept incoming\n    DRDA two-phase commit resynchronization requests. This value must be a\n    decimal number between 0 and 65535, including 65535; zero indicates that\n    DDF's TCP/IP support is to be deactivated. If RESPORT is non-zero, RESPORT\n    must not be the same as the value that is supplied on PORT.\n\n    For data sharing DB2 systems, RESPORT must be uniquely assigned to each\n    DB2 member, so that no two DB2 members use the same TCP/IP port for\n    two-phase commit resynchronization.\n\nSECPORT\n\n    Identifies the TCP/IP port number that is used by DDF to accept inbound\n    secure DRDA connection requests. This value must be a decimal number\n    between 0 and 65535, including 65535; zero indicates that DDF's secure\n    connection support for TCP/IP is deactivated.\n\nALIAS= alias-name  :alias-port :alias-secport\n    Specifies one or more alias names for the location. An alias name is a name\n    besides the location name that connect processing can accept. Specifying an\n    alias name does not change the location identifier for a database object.\n\n    Important:  ALIAS applies to DRDA connections only.\n\n    You can specify and modify as many as eight location aliases by using the\n    DSNJU003 utility. To specify more than 8 aliases, use the MODIFY DDF\n    command with the ALIAS option.\n\n    alias-name specifies from 1 to 16 characters for the location name.\n    alias-name cannot be one of the valid DSNJU003 keywords.\n\n     :alias-port specifies a TCP/IP port number for the alias that can be used\n     by DDF to accept distributed requests. This value must be a decimal number\n     between 1 and 65535, including 65535. The value must be different from the\n     values for the PORT, RESPORT, and SECPORT options and any value that was\n     specified for alias-port or alias-secport of any other defined alias.\n     Specify a value for alias-port when you want to identify a subset of data\n     sharing members to which a distributed request can go.\n\n     :alias-secport specifies a secure TCP/IP port number for the alias that\n     can be used by DDF to accept secure distributed requests using SSL. This\n     value must be a decimal number between 1 and 65535, including 65535. The\n     value must be different from the values for the SECPORT, PORT, and RESPORT\n     options, and any value that was specified for alias-port or alias-secport\n     of any other defined alias. Specify a value for alias-secport when you\n     want to identify a subset of data sharing members to which a secure\n     distributed request can go. When you specify a value for alias-secport,\n     the :alias-port value is optional.\n\n     You can add or replace aliases by respecifying the ALIAS option. The new\n     list of names replaces the existing list.\n\n     Related information:\n\n        -MODIFY DDF (DB2) (DB2 Commands)\n\nIPNAME= ipname\n     Changed the IPNAME values in the BSDS.\n\n     ipname specifies the IPNAME value. The value can be up to 8-bytes in length\n     and must be an alphanumeric character beginning with an alphabetic character.\n     When you specify this option, the DDF will activate only its TCP/IP\n     communications support, regardless of whether or not there is a value for\n     LUNAME. Only inbound and outbound DRDA protocol communications over\n     TCP/IP is allowed and there is no attempt to activate SNA/APPC\n     communications support.\n\n     The value specified must be either unique to this DB2 subsystem with an\n     enterprise, or if the DB2 subsystem is configured to be a member of a data\n     sharing group, unique to the data sharing group for which this DB2 subsystem\n     is a member. All members of a data sharing group must be defined with the\n     same IPNAME value if all the members are to activate only their TCP/IP\n     communications support. If some members of a data sharing group activate\n     their SNA/APPC (as well as TCP/IP communications support), then the\n     IPNAME value chosen for the TCP/IP only members must match the\n     GENERIC value specified for the members which activate their SNA/APPC as\n     well as their TCP/IP communications support.\n\n     The value given to IPNAME will be used by DB2 as the network-id portion of\n     a unit-of-work identifier. A unit-of-work identifier has traditionally\n     been made up of a network-id, a LU name, a 6-byte unique identifier\n     created from a timestamp, and a 2-byte current commit count value. When\n     running with an IPNAME value, the LU name portion of the unit-of-work\n     identifier will be created from a 4-byte character representation of the\n     hexadecimal notation of the value specified for the TCP/IP resync port\n     (RESPORT). This support for activating only TCP/IP communications will\n     occur only if the DB2 is running in V9 New Function Mode.\n\n     Do not confuse IPNAME with a TCP/IP external such as hostname or domain\n     name. The value you give IPNAME is only used internally by DB2 or in a\n     DRDA exchange with another DRDA server. It cannot be referenced by any\n     TCP/IP external, such as ping. Also, the hostname of the system upon which\n\n    the DB2 is running is a poor choice for IPNAME because more than one DB2\n    could run on the same system, and the IPNAME value given to any DB2 or\n    DB2 data sharing group must be unique within an enterprise.\n\nIPV4= ipv4-address\n    Identifies and associates a constant IPv4 IP address with DDF to accept\n    incoming connection requests to this specific subsystem only. This address\n    must be entered in dotted decimal form. If an IP address is not specified,\n    DB2 will automatically determine the IP address from TCP/IP.\n\n    When DB2 is a member of a data sharing group, it is strongly recommended\n    that you refer to a dynamic virtual IP address (DVIP). A group IP address,\n    GRPIPV4, should also be specified.\n\nIPV6= ipv6-address\n    Identifies and associates a constant IPv6 IP address with DDF to accept\n    incoming connection requests to this specific subsystem only. This address\n    must be entered in colon hexadecimal form. If an IP address is not\n    specified, DB2 will automatically determine the IP address from TCP/IP.\n\n    When DB2 is a member of a data sharing group, it is strongly recommended\n    that you refer to a dynamic virtual IP address (DVIP). A group IP address,\n    GRPIPV6, should also be specified.\n\nGRPIPV4\n\n    Identifies and associates a constant IPv4 IP address with the data sharing\n    group for which this DDF is a member. The IP address is used to accept\n    incoming connection requests that can be serviced by any member of the data\n    sharing group. This address must be entered in dotted decimal form. An\n    associated IPv4 subsystem/member address must also be specified in order to\n    identify the IP address associated with this specific member of the group.\n    If an IP address is not specified, DB2 will automatically determine the IP\n    address from TCP/IP.\n\n    It is strongly recommended that you refer to a sysplex distributor owned\n    distributing dynamic virtual IP address (DVIPA).\n\nGRPIPV6\n\n    Identifies and associates a constant IPv6 IP address with the data sharing\n    group for which this DDF is a member. The IP address is used to accept\n    incoming connection requests that can be serviced by any member of the data\n    sharing group. This address must be entered in colon hexadecimal form. An\n    associated IPv6 subsystem/member address must also be specified in order to\n    identify the IP address associated to this specific member of the group. If\n    an IP address is not specified, DB2 will automatically determine the IP\n    address from TCP/IP.\n\n    It is strongly recommended that you refer to a sysplex distributor owned\n    distributing dynamic virtual IP address (DVIPA).\n\nLUNAME= luname\n    Changes the LUNAME value in the BSDS.\n\n    luname specifies the LUNAME value. The LUNAME in the BSDS must always\n    contain the value that identifies your local DB2 subsystem to the VTAM\n    network.\n\nPASSWORD=\n\n    The DDF password follows VTAM convention, but DB2 restricts it to one to\n    eight alphanumeric characters. The first character must be either a capital\n    letter\n\n     or an alphabetic extender. The remaining characters can consist of\n     alphanumeric characters and alphabetic extenders.\n\n     password\n         Optionally assigns a password to the distributed data facility\n         communication record that establishes communications for a distributed\n         data environment. The PRTCT=password option on the APPL definition\n         statement is used to define DB2 to VTAM.\n\nGENERIC= gluname\n     Replaces the value of the DB2 GENERIC LUNAME subsystem parameter in\n     the BSDS.\n\n     gluname specifies the GENERIC LUNAME value.\n\nNOPASSWD\n\n     Removes the archive password protection for all archives that are created\n     after this operation. It also removes a previously existing password from\n     the DDF record. No other keyword can be used with NOPASSWD.\n\nNGENERIC\n\n     Changes the DB2 GENERIC LUNAME to binary zeros in the BSDS, indicating\n     that no VTAM generic LU name support is requested.\n\nNOALIAS\n\n     Indicates that no alias names exist for the specified location. Any alias\n     names that were specified in a previous DSNJU003 utility job are removed.\n\nNOIPV4\n\n     Removes the constant IPv4 address from the BSDS. The NGRPIPV4 keyword\n     must also be specified to ensure that the associated group address, if\n     any, is also removed.\n\nNOIPV6\n\n     Removes the constant IPv6 address from the BSDS. The NGRPIPV6 keyword\n     must also be specified to ensure that the associated group address, if\n     any, is also removed.\n\nNGRPIPV4\n\n     Removes the constant data sharing group IPv4 address from the BSDS.\n\nNGRPIPV6\n\n     Removes the constant data sharing group IPv6 address from the BSDS.\n\nNOIPNAME\n\n     Removes the IPNAME value from the DDF record. No other keyword can be\n     used with NOIPNAME.\n\nNOLUNAME\n\n     Removes the LUNAME value from the DDF record. No other keyword can be\n     used with NOLUNAME.\n\nCHECKPT\n\n     Allows updating of the checkpoint queue with the start checkpoint and end\n     checkpoint log records.\n\n     Attention:    This statement can override DB2's efforts to maintain data\n     in a consistent state. Do not use the statement without understanding the\n     conditional restart and checkpoint processing processes.\n\nTIME= time\n     On the CHECKPT statement, specifies the time that the start checkpoint\n     record was written.\n\n    On the HIGHRBA statement, TIME specifies when the log record with the\n    highest RBA was written to the log.\n\n    time specifies the time value. For timestamp format, see the STARTIME\n    option description.\n\nHIGHRBA\n\n    Updates the highest-written log RBA in either the active or archive log\n    data sets.\n\n    Attention:     This statement can override DB2's efforts to maintain data\n    in a consistent state. Do not use the statement without understanding the\n    conditional restart process.\n\nOFFLRBA= offlrba\n    Specifies the highest-offloaded RBA in the archive log.\n\n    offlrba is a hexadecimal number of up to 20 characters. If you use fewer\n    than 20 characters, leading zeros are added. The value must end with\n    hexadecimal X'FFF'.\n\nDELMBR\n\n    Deactivates or destroys a member of a data sharing group.\n\nDEACTIV\n\n    Marks a member of a data sharing group for deactivation. Deactivation is\n    the first step in deletion of a member from a data sharing group.\n\n    Before the member can be deactivated, it must be quiesced and have no\n    outstanding work. The logs and BSDS must exist.\n\nDESTROY\n\n    Completes the deletion of a member from a data sharing group.\n\n    After a member is destroyed, its member ID can be reused, and the logs and\n    BSDS can be deleted.\n\nRSTMBR\n\n    Restores a deactivated member of a data sharing group to the quiesced\n    state.\n\nMEMBERID= member-id\n    Specifies the data sharing group member that is to be deactivated,\n    destroyed, or restored.\n\n    member-id is a number in the range 1 - 32. This number is the member ID that\n    shown in the output from the DISPLAY GROUP command or the DSNJU004\n    (print log map) utility.\n\n    Related information:\n\n        DSNJU004 (print log map) output\n\n        DSN7100I (DB2 Messages)\n\nRelated concepts:\n\n     Member-specific access (DB2 Data Sharing Planning and Administration)\n\n     Phase 3: Forward log recovery (DB2 Administration Guide)\n\n     Timestamp (DB2 SQL)\n\nRelated tasks:\n\n     Deleting data sharing members (DB2 Data Sharing Planning and\nAdministration)\n\n     Performing conditional restart (DB2 Administration Guide)\n\n     Restoring deactivated data sharing members (DB2 Data Sharing Planning and\nAdministration)\n\nRelated information:\n\n     PRTCT (SNA Resource Definition Reference)\n\nMaking changes for active logs\n\nYou can add, delete, record, and enlarge active logs.\n\nAdding: If an active log is in stopped status, it is not reused for output\nlogging; however, it continues to be used for reading. To add a new active log:\n\n1.  Use the Access Method Services DEFINE command to define new active log\n    data sets.\n\n2.  Use DSNJLOGF to preformat the new active log data sets.\n\n    If you do not preformat these logs with the DSNJLOGF utility, DB2 needs to\n    preformat them the first time that they are used, and performance might be\n    impacted. Empty data sets and data sets with residual data need to be\n    preformatted.\n\n3.  Use DSNJU003 to register the new data sets in the BSDS.\n\nFor example, specify the following statements:\n\nNEWLOG  DSNAME=DSNC111.LOGCOPY1.DS04,COPY1\nNEWLOG  DSNAME=DSNC111.LOGCOPY2.DS04,COPY2\n\nTo copy the contents of an old active log data set to the new one, you can also\ngive the RBA range and the starting and ending timestamp on the NEWLOG\nstatement.\n\nTo archive to disk when the size of your active logs has increased, you might\nfind it necessary to increase the size of your archive log data set primary and\nsecondary space quantities by increasing the values of subsystem parameters\nPRIQTY and SECQTY. See Active log data sets storage requirements (DB2\nInstallation and Migration) for more information.\n\nDeleting: To delete information about an active log data set from the BSDS, you\nmight specify the following statements:\n\nDELETE  DSNAME=DSNC111.LOGCOPY1.DS01\nDELETE  DSNAME=DSNC111.LOGCOPY2.DS01\n\nRecording: To record information about an existing active log data set in the\nBSDS, you might specify the following statement:\n\nNEWLOG  DSNAME=DSNC111.LOGCOPY2.DS05,COPY2,STARTIME=19910212205198,\n                ENDTIME=19910412205200,STARTRBA=43F8000,ENDRBA=65F3FFF\n\nYou can insert a record of that information into the BSDS for any of these\nreasons:\n\no  The data set has been deleted and is needed again.\n\no  You are copying the contents of one active log data set to another data set\n   (copy 1 to copy 2).\n\no  You are recovering the BSDS from a backup copy.\n\nEnlarging: When DB2 is inactive (down), use one of the following procedures.\n\nIf you can use the Access Method Services REPRO command, follow these steps:\n\n1.  Stop DB2. This step is required because DB2 allocates all active log data\n    sets when it is active.\n\n2.  Use the Access Method Services ALTER command with the NEWNAME option\n    to rename your active log data sets.\n\n3.  Use the Access Method Services DEFINE command to define larger active log\n    data sets. Refer to installation job DSNTIJIN to see the definitions that\n    create the original active log data sets.\n\n    By reusing the old data set names, you don't need to run the change log\n    inventory utility to establish new names in the BSDSs. The old data set\n    names and the correct RBA ranges are already in the BSDSs.\n\n4.  Use the Access Method Services REPRO command to copy the old (renamed)\n    data sets into their respective new data sets.\n\n5.  Start DB2.\n\nIf you cannot use the Access Method Services REPRO command, follow this\nprocedure:\n\n1.  Ensure that all active log data sets except the current active log data\n    sets have been archived. Active log data sets that have been archived are\n    marked REUSABLE in print log map utility (DSNJU004) output.\n\n2.  Stop DB2.\n\n3.  Rename or delete the reusable active logs. Allocate new, larger active log\n    data sets with the same names as the old active log data sets.\n\n4.  Run the DSNJLOGF utility to preformat the new log data sets.\n\n5.  Run the change log inventory utility (DSNJU003) with the DELETE statement\n    to delete all active logs except the current active logs from the BSDS.\n\n6.  Run the change log inventory utility with the NEWLOG statement to add to\n    the BSDS the active logs that you just deleted. So that the logs are added\n    as empty, do not specify an RBA range.\n\n7.  Start DB2.\n\n8.  Issue the ARCHIVE LOG command to cause DB2 to truncate the current active\n    logs and switch to one of the new sets of active logs.\n\n9.  Repeat steps 2 through 7 to enlarge the active logs that were just\n    archived.\n\nAlthough all log data sets do not need to be the same size, from an operational\nstandpoint using the same size is more consistent and efficient. If the log\ndata sets are not the same size, tracking your system's logs can be more\ndifficult. Space can be wasted if you are using dual data sets of different\nsizes because they fill only to the size of the smallest, not using the\nremaining space on the larger one.\n\nIf you are archiving to disk and the size of your active logs has increased,\nyou might need to increase the size of your archive log data sets. However,\nbecause of DFSMS disk management limits, you must specify less than 64 000\ntracks for the primary space quantity. See Active log data sets storage\nrequirements (DB2 Installation and Migration) for more information.\n\nRelated reference:\n\n     PRIMARY QUANTITY field (PRIQTY subsystem parameter) (DB2 Installation\nand Migration)\n\n     SECONDARY QTY field (SECQTY subsystem parameter) (DB2 Installation and\nMigration)\n\nMaking changes for archive logs\n\nYou can add and delete archive logs.\n\nAdding: When the recovery of an object depends on reading an existing archive\nlog data set, the BSDS must contain information about that data set, so that\nthe recovery job can find it. To register information about an existing archive\nlog data set in the BSDS, you might specify the following statement:\n\nNEWLOG  DSNAME=DSNC111.ARCHLOG1.D89021.T2205197.A0000015,COPY1VOL=DSNV04,\nUNIT=TAPE,STARTRBA=3A190000,ENDRBA=3A1F0FFF,CATALOG=NO\n\nDeleting: To delete an entire archive log data set from one or more volumes,\nyou might specify the following statement:\n\nDELETE  DSNAME=DSNC111.ARCHLOG1.D89021.T2205197.A0000015,COPY1VOL=DSNV04\n\nA conditional restart control record\n\nYou can create a conditional restart control record in the BSDS.\n\nTo create a new conditional restart control record in the BSDS, you must\nexecute the change log inventory utility and use the CRESTART control\nstatement. For example, to truncate the log, to specify the earliest log RBA,\nand to bypass backout, use a statement similar to the following statement:\n\nCRESTART  CREATE,STARTRBA=28000,ENDRBA=58000,BACKOUT=NO\n\nTo specify a cold start, make the values of STARTRBA and ENDRBA equal with a\nstatement similar to the following statement:\n\nCRESTART  CREATE,STARTRBA=4A000,ENDRBA=4A000\n\nIn most cases when doing a cold start, you should make sure that the STARTRBA\nand ENDRBA are set to an RBA value that is greater than the highest used RBA.\n\nTo truncate the DB2 logs via conditional restart by specifying a timestamp\nrather than an RBA value, use a statement similar to the following statement:\n\nCRESTART  CREATE,ENDTIME=20051402030068\n\nAn existing conditional restart control record governs any START DB2 operation\nuntil one of these events occurs:\no  A restart operation completes.\no  A CRESTART CANCEL statement is issued.\no  A new conditional restart control record is created.\n\nDeleting log data sets with errors\n\nIf an active log data set encounters an I/O error, use the DSNJU003 (change log\ninventory) utility to delete the log data sets with errors.\n\nProcedure\n\nTo delete log data sets with errors:\n\n1.  If you use dual active log data sets, check if the data from the bad active\n    log data set is saved in the other active log. If it is, you can use the\n    other active log.\n\n2.  If you cannot use the other active log or if the active log is in the\n    STOPPED status, fix the problem manually by taking the following steps\n\n    a.  Check whether the data set was offloaded. For example, check the list\n        of archive log data sets to see whether one has the same RBA range as\n        the active log data set. This list can be created by using the DSNJU004\n        (print log map) utility.\n\n    b.  If the data set was not offloaded, copy the data to a new VSAM data\n        set. If the data set was offloaded, create a new VSAM data set that is\n        to be used as an active log data set.\n\n    c.  Run the change log inventory utility with the DELETE and NEWLOG\n        statements.\n\n        Important:  If misused, the change log inventory utility can compromise\n        the viability and integrity of the DB2 subsystem. Only highly skilled\n        people, such as the DB2 system administrator, should use this utility,\n        and then only after careful consideration.\n\n        The DELETE statement removes information about the bad data set from\n        the BSDS. The NEWLOG statement identifies the new data set as the new\n        active log. The DELETE and NEWLOG operations can be performed by the\n        same job step. The DELETE statement precedes the NEWLOG statement in\n        the SYSIN input data set.\n\n        To ensure consistent results, run the change log inventory utility on\n        the same z/OS system on which the DB2 online subsystem runs.\n\n        Use the print log map utility before and after you run the change log\n        inventory utility to ensure correct execution and to document changes.\n\n        When you use dual active logs, choose a naming convention that\n        distinguishes primary and secondary active log data set. The naming\n        convention should also identify the log data sets within the series of\n        primary or secondary active log data sets. For example, the default\n        naming convention that is established at DB2 installation time is as\n        follows:\n\n        prefix.LOGCOPYn.DSmm\n        In this convention, n=1 for all primary log data sets, n=2 for all\n        secondary log data sets, and mmis the data set number within each\n        series.\n\n        If a naming convention such as the default convention is used, pairs of\n        data sets with equal mmvalues are usually used together. For example,\n        prefix.LOGCOPY1.DS02 and prefix.LOGCOPY2.DS02 are used together.\n\n        However, after you run the change log inventory utility with the DELETE\n        and NEWLOG statements, the primary and secondary series can become\n        unsynchronized. This situation can occur even if the NEWLOG data set\n        name that you specify is the same as the old data set name. To avoid this\n        situation, always do maintenance on both data sets of a pair in the same\n        change log inventory execution:\n        o  Delete both data sets together.\n        o  Define both data sets together with NEWLOG statements.\n\n        The data sets themselves do not require deletion and redefinition.\n\n3.  Delete the bad data set by using VSAM Access Method Services.\n\nWhat to do next\n\nBefore you initiate a conditional restart or cold restart, consider making\nbackup copies of all disk volumes that contain any DB2 data sets. These backup\ncopies enable a possible fallback. The backup data sets must be generated when\nDB2 is not active.\n\nRelated reference:\n\nDSNJU004 (print log map)\n\nSyntax and options of the DSNJU003 control statement\n\nAltering references to log data sets in the BSDS\n\nYou can add or delete active or archive log data sets in the bootstrap data set\n(BSDS) by using the DSNJU003 utility.\n\nAbout this task\n\nIntroductory concepts\n\n    Bootstrap data set (Introduction to DB2 for z/OS)\n\nWhen you alter references to log data sets in the BSDS, the log data sets are\nnot changed. And you do not need to make any changes to the referenced log data\nsets.\n\nProcedure\n\nTo alter references to log data sets in the BSDS:\n\no  To add a reference to a data set in the BSDS, use the NEWLOG statement of\n   the DSNJU003 utility.\n\no  To delete a reference to a data set in the BSDS, use the DELETE statement of\n   the DSNJU003 utility.\n\nRelated reference:\n\nSyntax and options of the DSNJU003 control statement\n\nDefining the high-level qualifier for catalog and directory objects\n\nYou can define the high-level qualifier for catalog and directory objects.\n\nProcedure\n\nUse the NEWCAT statement to define the high-level qualifier that is to be used for\nthe following objects:\no  Catalog table spaces and index spaces\no  Directory table spaces and index spaces\n\nAt startup, the DB2 system checks that the name that is recorded with NEWCAT in\nthe BSDS is the high-level qualifier of the DB2 system table spaces that are defined\nin the load module for subsystem parameters.\nNEWCAT is normally used only at installation time.\nWhen you change the high-level qualifier by using the NEWCAT statement, you\nmight specify the following statements:\n\n//S2  EXEC PGM=DSNJU003\n//SYSUT1     DD DSN=DSNC120.BSDS01,DISP=OLD\n//SYSUT2     DD DSN=DSNC120.BSDS02,DISP=OLD\n//SYSPRINT  DD SYSOUT=*\n  NEWCAT  VSAMCAT=DBP1\n\nAfter you run the change log inventory utility with the NEWCAT statement, the\nutility generates output similar to the following output:\n\nNEWCAT  VSAMCAT=DBP1\nDSNJ210I  OLD VASAM  CATALOG NAME=DSNC120, NEW  CATALOG NAME=DBP1\nDSNJ225I  NEWCAT OPERATION  COMPLETED  SUCCESSFULLY\nDSNJ200I  DSNJU003  CHANGE LOG INVENTORY  UTILITY\n          PROCESSING  COMPLETED SUCCESSFULLY\n\nRelated tasks:\n\nRenaming DB2 system data sets\n\nRenaming DB2 system data sets\n\nOccasionally, you might want to rename the DB2 system table spaces\n\nProcedure\n\nTo rename DB2 system data sets:\n\n1.  Stop DB2 in a consistent state.\n\n2.  Create a full system backup so that you can recover from operational\n    errors.\n\n3.  Execute the change log inventory utility with NEWCAT.\n\n4.  Rename the BSDS and all DB2 directory and catalog table spaces and index\n    spaces with IDCAMS.\n\n5.  Reassemble DSNZPARM to redefine the high-level qualifier for the system\n    table spaces.\n\n6.  Update the BSDS name in the DB2 startup procedure.\n\n7.  Start DB2.\n\n8.  Drop and re-create the work file database.\n\n9.  Optionally use the ALTER command for table spaces in DSNDB04 and user\n    databases.\n\nRenaming DB2 active log data sets\n\nWhen you rename system data sets, you might also want to rename the log data\nsets.\n\nAbout this task\n\nTo rename DB2 active log data sets:\n\nProcedure\n\n1.  Stop DB2 in a consistent state.\n\n2.  Create a full system backup so that you can recover from operational\n    errors.\n\n3.  Delete the reusable active log data sets with IDCAMS, but keep the current\n    active log.\n\n4.  Define a new set of active log data sets with IDCAMS.\n\n5.  Execute the change log inventory utility to remove names of deleted active\n    log data sets and to define the new active log data set names in the BSDS.\n\n6.  Start and use DB2 normally.\n\nResults\n\nWhen the current active log is archived and becomes reusable, you can delete\nit.\n\nRenaming DB2 archive log data sets\n\nYou do not need to rename archive log data sets because old archive logs are\nreplaced as a part of the normal maintenance cycle and the RECOVER utility\nworks with archive logs that contain different high-level qualifiers.\n\nTo modify the high-level qualifier for archive log data sets, you need to\nreassemble DSNZPARM.\n\nSample DSNJU003 control statements\n\nUse the sample control statements as models for developing your own DSNJU003\ncontrol statements.\n\nExample 1: Adding a new archive log data set\n\nThe following control statement specifies that the DSNJU003 utility is to add\nthe data set DSNREPAL.A0001187 to the BSDS. The volume serial number for the\ndata set is DSNV04, as indicated by the COPY1VOL option. The device type is\nSYSDA, and the data set is not to be cataloged. The RBA of the beginning of the\narchive log data set volume is 3A190000, and the end RBA is 3A1F0FFF.\n\n//STEP5  EXEC PGM=DSNJU003,COND=EVEN\n//SYSUT1     DD DSN=DSNCAT.BSDS01,DISP=SHR\n//SYSUT2     DD DSN=DSNCAT.BSDS02,DISP=SHR\n//SYSPRINT  DD SYSOUT=A\n//SYSIN      DD *\nNEWLOG  DSNAME=DSNREPAL.A0001187,COPY1VOL=DSNV04,UNIT=SYSDA,\nSTARTRBA=3A190000,ENDRBA=3A1F0FFF,CATALOG=NO\n/*\n\nExample 2: Deleting a data set\n\nThe following control statement specifies that DSNJU003 is to delete data set\nDSNREPAL.A0001187 from the BSDS. The volume serial number for the data set is\nDSNV04, as indicated by the COPY1VOL option.\n\nDELETE  DSNAME=DSNREPAL.A0001187,COPY1VOL=DSNV04\n\nExample 3: Creating a new conditional restart control record\n\nThe following statement specifies that DSNJU003 is to create a new conditional\nrestart control record, which controls the next restart of DB2. BACKOUT=NO\nindicates that DB2 is not to execute the backward-log-recovery phase when it\nrestarts. The ENDRBA option indicates that 000000010000 is the last RBA of the\nlog that is to be used during restart. Any log information in the bootstrap\ndata set, the active logs, and the archive logs with an RBA that is greater\nthan this RBA is discarded.\n\nCRESTART  CREATE,BACKOUT=NO,ENDRBA=000000010000\n\nExample 4: Adding a communication record to the BSDS\n\nThe following control statement specifies that DSNJU003 is to add a new\ncommunication record to the BSDS. The location, LU name, and password values\nare all provided.\n\nDDF LOCATION=USIBMSTODB22,LUNAME=STL#M08,PASSWORD=$STL@290\n\nExample 5: Updating a communication record with a secure\nTCP/IP port number in the BSDS\n\nThe following control statement specifies that DSNJU003 is to update the\ncommunication record in the BSDS to specify a secure TCP/IP port.\n\nDDF LOCATION=XYZ,SECPORT=448\n\nExample 6: Adding a communication record with an alias to the\nBSDS\n\nThe following control statement specifies that DSNJU003 is to add a\ncommunication record to the BSDS. The location, alias, LU name, and password\nvalues are all provided.\n\nDDF\nLOCATION=USIBMSTODB22,ALIAS=STL715A1,STL715A2,LUNAME=STL#M08,PASSWORD=$STL@290\n\nNote:  The alias is an SQL identifier and should follow the rules of SQL\nidentifiers. The identifier can not include special characters when you are\nnaming a location alias.\n\nExample 7: Adding multiple aliases and alias ports to the BSDS\n\nThe following control statement specifies five alias names for the communication\nrecord in the BSDS (MYALIAS1, MYALIAS2, MYALIAS3, MYALIAS4, and\nMYALIAS5). Only MYALIAS2 and MYALIAS5 support subsets of a data sharing\ngroup. Any alias names that were specified in a previous DSNJU003 utility job are\nremoved.\n\nDDF ALIAS=MYALIAS1,MYALIAS2:8002,MYALIAS3,MYALIAS4,MYALIAS5:10001\n\nExample 8: Specifying a point in time for system recovery\n\nThe following control statement specifies that DSNJU003 is to create a new\nconditional restart control record. The SYSPITR option specifies an end RBA\nvalue as the point in time for system recovery for a non-data sharing system.\nFor a data sharing system, use an end LRSN value instead of an end RBA value.\nThis point in time is used by the RESTORE SYSTEM utility.\n\n//JOBLIB   DD   DSN=USER.TESTLIB,DISP=SHR\n//         DD   DSN=DSN910.SDSNLOAD,DISP=SHR\n//STEP01  EXEC PGM=DSNJU003\n//SYSUT1  DD DSN=DSNC910.BSDS01,DISP=OLD\n//SYSUT2  DD DSN=DSNC910.BSDS02,DISP=OLD\n//SYSPRINT   DD SYSOUT=*\n//SYSIN   DD *\n  CRESTART   CREATE,SYSPITR=04891665D000\n/*\n\nTo indicate that a SYSPITR restart is to be done without log truncation,\nspecify a SYSPITR value of all 'FFs in the DSNJU003 job with the CRESTART\nparameter.\n\n//STEP1  EXEC PGM=DSNJU003\n//SYSUT1  DD DSN=DSNC910.BSDS01,DISP=OLD\n//SYSUT2  DD DSN=DSNC910.BSDS02,DISP=OLD\n//SYSPRINT   DD SYSOUT=\n//SYSIN  DD\nCRESTART  CREATE,SYSPITR=FFFFFFFFFFFFFFFFFFFF\n/*\n\nDuring the subsequent restart, the user will be asked to confirm the\nconditional restart with the following:\n\nDSNJ256I) DSNJW6  CONDITIONAL RESTART  RECORD  INDICATES SYSPITR\n      RESTART WITH  NO LOG TRUNCATION\nDSNJ11I)     CONDITIONAL  RESTART  RECORD 1 CREATED  AT 7.214  7:56\n      WAS FOUND. REPLY  Y TO USE,  N TO CANCEL\n\nExample 9: Removing aliases from a communication record\n\nThe following control statement specifies that no alias names apply. Any alias\nnames that were specified in a previous DSNJU003 utility job are removed.\n\nDDF NOALIAS\n\nExample 10: Deactivating a data sharing member\n\nThe following control statement specifies that DSNJU003 is to deactivate a data\nsharing member.\n\nDELMBR  DEACTIV,MEMBERID=3\n ","additional":[]},{"heading":"DSNJ122I DUAL BSDS DATA SETS ARE OUT OF SYNCHRONIZATION","copyright":"Text Below Copyright (c) 2023, IBM","followUp":"V=IBM P=DB2 MESSAGES R=V13 I=DSNJ122I","content":"Explanation\n\nDuring log manager initialization or stand-alone utility initialization, the\ndual BSDS data sets were found to differ in content in one of the following\nways:\n\no  A record that exists in both BSDSs is not identical. (This comparison\n   accounts for some minor differences.)\n\no  A record exists in one BSDS and not in the other.\n\no  A required record is missing from one BSDS copy.\n\nThe print log map (DSNJU004) utility does not print all of the information in\nthe BSDS. Therefore, the output from DSNJU004 might be identical for two\nBSDSs, but the BSDSs might still be different.\n\nExample scenarios that might cause this problem include the following\nsituations:\n\no  The change log inventory (DSNJU003) utility was used to alter one copy of a\n   BSDS and not the other.\n\no  Db2 was forced into single-BSDS mode due to an I/O error, and the stopped\n   BSDS copy was not recovered.\n\nSystem action\n\nDb2 startup is terminated if the problem is detected during log manager\ninitialization. If the problem is detected by a stand-alone utility, the\nutility terminates with return code 4.\n\nOperator response\n\nNotify the system programmer.\n\nSystem programmer response\n\nIf the message was issued by Db2 initialization, run DSNJU004 against each\nBSDS to determine which is more current. Delete the outdated copy, define a\nreplacement for the deleted data set, and copy the remaining BSDS to the\nreplacement by using IDCAMS REPRO.\n\nIf the message was issued by the DSNJCNVT utility, you can follow the same\nprocedure as if the message was issued by Db2 initialization. Alternatively,\nDSNJCNVT can be run with the SYSUT2 DD statement omitted and a SYSUT1 DD\nstatement that specifies the correct BSDS copy. The converted BSDS is written\nto the SYSUT3 data set and, if provided, the SYSUT4 data set.\n\nRelated reference\n\no  DSNJU004 (print log map)\n\nRelated information\n\no  REPRO command\n ","additional":[]},{"heading":"DSNJ103I csect-name LOG ALLOCATION ERROR DSNAME=dataset-name, ERROR\n         STATUS=status-indicator, SMS REASON CODE=ssssssss","copyright":"Text Below Copyright (c) 2023, IBM","followUp":"V=IBM P=DB2 MESSAGES R=V13 I=DSNJ103I","content":"Explanation\n\nThe log manager encountered an error while it attempted to allocate the\nspecified active or archive log data set.\n\ncsect-name\n   The name of the control section that issued the message.\n\ndataset-name\n   The name of the data set.\n\nstatus-indicator\n   The error reason code that is returned by MVS(TM) dynamic allocation\n   (SVC99). This value consists of a 2-byte error code (S99ERROR) followed by\n   a 2-byte information code (S99INFO) from the SVC99 request block.\n\nssssssss\n   If available, more SMS reason code information from S99ERSN, which is a\n   field of S99RBX. ssssssss is displayed if the S99ERROR code indicates an\n   SMS allocation error (97xx).\n\nThis message might be preceded by message DSNJ073I.\n\nSystem action\n\nFor active log data sets, if the error is encountered during log manager\ninitialization, Db2 startup is terminated. If two copies of the active log\ndata sets are defined, this message is displayed only once.\n\nFor archive log data sets, if two copies of the archive log data sets are\ndefined, processing continues on the remaining archive log data set.\n\nOperator response\n\nNotify the system programmer.\n\nSystem programmer response\n\nIf the status-indicator value is '17080000', the site might have one or more\nactive log data sets defined in the BSDS, but not allocated on DASD. To\ncorrect the situation, print the contents of the current active log data set\ninventory by using the print log map (DSNJU004) utility. Then, take one of the\nfollowing actions:\n\no  For each active log data set that is listed in the BSDS, but not allocated\n   on DASD, allocate the active log data set by using access method services.\n   The access method services command syntax for active log data sets can be\n   found in installation job DSNTIJIN.\n\no  Use the DSNJU003 utility DELETE statement to delete the errant active log\n   data set name. Then, use the DSNJU003 utility NEWLOG statement to add the\n   correct name to the active log data set inventory. The name that is\n   specified on the NEWLOG statement must be the same as the name of the\n   actual Db2 active log data set that is allocated on DASD.\n\nIf the problem occurred because the MVS task I/O table (TIOT) did not have\nenough space, an allocation error occurs. In this case, perform the following\nactions to maximize the size of the TIOT and to minimize the amount of TIOT\nspace that each data set uses:\n\n1. Set the MVS TIOT size to 64K in the ALLOCxx PARMLIB member.\n\n2. Specify NON_VSAM_XTIOT=YES in the DEVSUPxx PARMLIB member to enable Db2 to\n   use the MVS extended task I/O table (XTIOT) when allocating offload data\n   sets.\n\n3. Specify a dynamic volume count (DVC) of 0 for any SMS data set class that\n   is used to allocate a Db2 BSDS, active log, or secondary log data set.\n\n4. Reallocate any existing BSDS, active log, or secondary log data sets that\n   were allocated with a DVC greater than 0.\n\nIf the problem occurred during Db2 initialization and that data set is an\nactive log data set, take one of the following actions:\n\no  Resolve the error (status-indicator) that is associated with the active log\n   data set\n\no  Provide another copy of the active log data set by using access method\n   services (AMS)\n\no  Update the BSDS by using the change log inventory (DSNJU003) utility\n\no  Restart Db2\n\nFor archive log data sets, take one of the following actions:\n\no  If the problem occurred during allocation with the intent to write the data\n   set, no immediate action is required. However, failure to resolve the error\n   (status-indicator) might eventually cause the available space in the active\n   log to be exhausted (DSNJ111E), because all future offloads might fail due\n   to the same error.\n\no  If the problem occurred during allocation with the intent to read the data\n   set, determine the problem. Use the DSNJU003 utility DELETE statement to\n   delete the archive log data set from the BSDS archive log inventory. Then,\n   use the DSNJU003 utility NEWLOG statement to add the data set back to the\n   archive log inventory with the correct volume and device.\n\nRelated concepts\n\no  Recovering from BSDS or log failures during restart\n\nRelated reference\n\no  Interpreting DYNALLOC return codes\n\no  S99RBX fields\n\no  DSNJU003 (change log inventory)\n\nRelated information\n\no  Recovering from active log failures\n\no  Recovering from archive log failures\n\no  DSNJ073I\n\no  DSNJ111E\n ","additional":[]},{"heading":"Chapter 41. DSNJU004 (print log map)","copyright":"Text Below Copyright (c) 2023, IBM","followUp":"V=IBM P=DB2 UTILITY GUIDE R=V13 I=DSNJU004","content":"The DSNJU004 (print log map) stand-alone utility generates a variety of\ninformation that can be useful in backup and recovery situations.\n\nThe print log map (DSNJU004) utility lists the following information:\no  Log data set name, log RBA association, and log LRSN for both copy 1 and\n   copy 2 of all active and archive log data sets\no  Active log data sets that are available for new log data\no  Status of all conditional restart control records in the bootstrap data set\no  Contents of the queue of checkpoint records in the bootstrap data set\no  The communication record of the BSDS, if one exists\no  Contents of the quiesce history record\no  System and utility timestamps\no  Contents of the checkpoint queue\no  Archive log command history\no  BACKUP SYSTEM utility history\no  System CCSID information\no  System-level backup information\no  Information about deactivated and destroyed data sharing members\n\nIn a data sharing environment, the DSNJU004 utility can list information from\nany or all BSDSs of a data sharing group.\n\nEnvironment\n\nThe DSNJU004 program runs as a batch job.\n\nThis utility can be executed either when DB2 is running and when it is not\nrunning. However, to ensure consistent results from the utility job, the\nutility and the DB2 online subsystem must both be executing under the control\nof the same operating system.\n\nAuthorization required\n\nThe user ID of the DSNJU004 job must have requisite RACF authorization.\n\nRequired and optional data sets\n\nDSNJU004 recognizes DD statements with the following DD names:\n\nSYSUT1\n\n     Specifies and allocates the bootstrap data set. This statement is\n     required. It allocates the BSDS. If the BSDS must be shared with a\n     concurrently executing DB2 online subsystem, use DISP=SHR on the DD\n     statement.\n\nSYSPRINT\n\n     Specifies a data set or print spool class for print output. This statement\n     is required. The logical record length (LRECL) is 125.\n\nSYSIN (optional)\n\n     Contains the control statement. If you do not specify the SYSIN DD\n     statement, BSDS information is printed only from the BSDS data set that is\n     identified by the SYSUT1 DD statement.\n\nGROUP\n\n    Names a single BSDS. DB2 can use this BSDS to find the names of all BSDSs in\n    the group. Ensure that the BSDS name that you specify is not the BSDS of a\n    member that has been quiesced since before new members joined the group.\n    This statement is required if the control statement specifies either of these\n    options:\n    o  MEMBER *\n    o  MEMBER(member-name)\n\nMnnBSDS\n\n    Names the BSDS data set of a group member whose information is to be\n    listed. You must specify one such DD statement for each member. The\n    statements are required if the control statement specifies MEMBER DDNAME.\n    nn represents a two-digit number. You must use consecutive two-digit\n    numbers from 01 to the total number of required members. If a break occurs\n    in the sequence of numbers, any number after the break is ignored.\n\nRunning the DSNJU004 utility\n\nUse the following EXEC statement to execute this utility:\n\n//    EXEC    PGM=DSNJU004\n\nRecommendations\n\no  For dual BSDSs, execute the print log map utility twice, once for each BSDS,\n   to compare their contents.\n\no  To ensure consistent results for this utility, execute the utility job on\n   the same z/OS system on which the DB2 online subsystem executes.\n\no  Execute the print log map utility regularly, possibly daily, to keep a\n   record of recovery log data set usage.\n\no  Use the print log map utility to document changes that are made by the\n   change log inventory utility.\n\nRelated concepts:\n\n     Management of the bootstrap data set (DB2 Administration Guide)\n\n     Conditional restart (DB2 Administration Guide)\n\nRelated tasks:\n\n     Deleting data sharing members (DB2 Data Sharing Planning and\nAdministration)\n\n     Restoring deactivated data sharing members (DB2 Data Sharing Planning and\nAdministration)\n\nSyntax and options of the DSNJU004 control statement\n\nUsing the SYSIN data set allows you to list information from any or all BSDSs\nof a data sharing group.\n\nDSNJU004 (print log map) syntax diagram\n\nOption descriptions\n\nThe following keywords can be used in an optional control statement on the\nSYSIN data set:\n\nMEMBER\n\n     Specifies which member's BSDS information to print.\n\n     *   Prints the information from the BSDS of each member in the data\n         sharing group.\n\n     DDNAME\n\n         Prints information from only those BSDSs that are pointed to by the\n         MxxBSDS DD statements.\n\n     (member-name)\n         Prints information for only the named group members.\n\nSample DSNJU004 control statement\n\nUse the sample control statements as models for developing your own DSNJU004\ncontrol statements.\n\nThe following statement specifies that DSNJU004 is to print information from\nthe BSDS for each member in the data sharing group:\n\n//PLM        EXEC PGM=DSNJU004\n//GROUP      DD DSN=DBD1.BSDS01,DISP=SHR\n//SYSPRINT   DD SYSOUT=*\n//SYSIN      DD *\n             MEMBER  *\n\nDSNJU004 (print log map) output","additional":[]}]}